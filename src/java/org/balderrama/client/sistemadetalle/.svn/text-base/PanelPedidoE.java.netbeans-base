/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.balderrama.client.sistemadetalle;

/**
 *
 * @author 
 */
import com.google.gwt.http.client.Request;
import com.google.gwt.http.client.RequestCallback;
import com.google.gwt.http.client.RequestException;
import com.google.gwt.http.client.Response;
import com.google.gwt.json.client.JSONArray;
import com.google.gwt.json.client.JSONObject;
import com.google.gwt.json.client.JSONParser;
import com.google.gwt.json.client.JSONString;
import com.google.gwt.json.client.JSONValue;
import com.google.gwt.user.client.Window;
import com.gwtext.client.core.EventObject;
import com.gwtext.client.widgets.Button;
import com.gwtext.client.widgets.Panel;
import com.gwtext.client.core.RegionPosition;
import com.gwtext.client.data.Record;
import com.gwtext.client.data.SimpleStore;
import com.gwtext.client.widgets.MessageBox;
import com.gwtext.client.widgets.PaddedPanel;
import com.gwtext.client.widgets.event.ButtonListenerAdapter;
import com.gwtext.client.widgets.form.ComboBox;
import com.gwtext.client.widgets.form.DateField;
import com.gwtext.client.widgets.form.Field;
import com.gwtext.client.widgets.form.FormPanel;
import com.gwtext.client.widgets.form.TextArea;
import com.gwtext.client.widgets.form.TextField;
import com.gwtext.client.widgets.form.event.ComboBoxListenerAdapter;
import com.gwtext.client.widgets.form.event.TextFieldListenerAdapter;
import com.gwtext.client.widgets.grid.GridPanel;
import com.gwtext.client.widgets.grid.event.EditorGridListenerAdapter;
import com.gwtext.client.widgets.layout.BorderLayout;
import com.gwtext.client.widgets.layout.BorderLayoutData;
import com.gwtext.client.widgets.layout.FitLayout;
import com.gwtext.client.widgets.layout.HorizontalLayout;
import com.gwtext.client.widgets.layout.TableLayout;
import com.gwtext.client.widgets.layout.TableLayoutData;

import java.util.Date;
import org.balderrama.client.emergentes.SeleccionMarcaTienda;
import org.balderrama.client.util.Conector;
import org.balderrama.client.marca.Marca;
import org.balderrama.client.util.KMenu;
import org.balderrama.client.util.ReporteMediaCartaChorroWindow;
import org.balderrama.client.util.Utils;
//import org.balderrama.client.util.Validacion;

public class PanelPedidoE extends Panel {

    private SeleccionMarcaTienda SM;
    //private Panel panel;
    private String COMPRA_DIRECTA_TABBED = "96000_venta-";
    private TextField tex_marca;
    private ComboBox com_modeloCV;
    private ComboBox com_estilo;

    private TextField tex_numeropedido;
    private TextField tex_modeloCP;
    private TextField tex_totalpares;
    private TextField tex_totalcaja;
    private DateField dat_fecha;
   // private ListaPedidoCalzados lista;
    private ListaCalzadoPedido lista1;
    boolean respuesta = false;
    private TextArea tea_descripcion;
    private Button but_aceptar;
    private Button but_cancelar;
    private Button but_limpiar;
    public KMenu kmenu;
    String selecionado = "";
    String marca;
    String idmarca;
    String numeropedido;
    String modelo;
    Object[][] modeloM;
    //Object[][] lineaM;
      Object[][] clienteM;
    Object[][] estiloM;
    Object[][] colorM;
    Object[][] materialM;

    String opcionb;
    String opcion;

public PanelPedidoE(String idmarca, String marca, String numeropedido, String opcion, Object[][] clienteM, Object[][] vendedorM, Object[][] colorM, Object[][] materialM, Object[][] modeloM, String opcionb, SeleccionMarcaTienda SM) {

        this.SM = SM;
        this.marca = marca;
        this.idmarca = idmarca;
        this.numeropedido = numeropedido;
        this.opcionb = opcion;
        this.clienteM = clienteM;
        this.materialM = materialM;
        this.estiloM = vendedorM;
        this.colorM = colorM;
        this.modeloM = modeloM;
        this.opcion = opcionb;
       // this.lineaM = LineaM;
        onModuleLoad();
    }

    public void onModuleLoad() {
        //panel = new Panel();
        setId("tab-" + COMPRA_DIRECTA_TABBED);
        setTitle("Items");
        setLayout(new FitLayout());
        setBaseCls("x-plain");
        this.setClosable(true);
        this.setId("TPfun5002");
        setIconCls("tab-icon");

        Panel pan_borderLayout = new Panel();
        pan_borderLayout.setLayout(new BorderLayout());
        pan_borderLayout.setBaseCls("x-plain");

        Panel pan_norte = new Panel();
        pan_norte.setLayout(new TableLayout(3));
        pan_norte.setBaseCls("x-plain");
        pan_norte.setHeight(98);
        pan_norte.setPaddings(5);

        Panel pan_sud = new Panel();
        pan_sud.setLayout(new TableLayout(3));
        pan_sud.setBaseCls("x-plain");
        pan_sud.setHeight(120);
        pan_sud.setPaddings(5);


//        lista = new ListaPedidoCalzados();
//        lista.onModuleLoad();
        if (opcion.equalsIgnoreCase("1")) {
            //lista1 = new ListaCalzadoPedido(PanelPedidoE.this, opcion,colorM,materialM);
                lista1 = new ListaCalzadoPedido();
            lista1.onModuleLoad1();
        //pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("2")) {
                 lista1 = new ListaCalzadoPedido();
        lista1.onModuleLoad4();

        //pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("3")) {
               lista1 = new ListaCalzadoPedido();
          lista1.onModuleLoad7();

        //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("4")) {
                 lista1 = new ListaCalzadoPedido();
        lista1.onModuleLoad10();

        //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("5")) {
               lista1 = new ListaCalzadoPedido();
          lista1.onModuleLoad2();
        //    lista1.onModuleLoad2(idmarca,"");

            //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("6")) {
             lista1 = new ListaCalzadoPedido();
   //          lista1 = new ListaCalzadoPedido(PanelPedidoE.this,opcion,colorM,materialM);
 lista1.onModuleLoad5(colorM);
        }
//        if (opcion.equalsIgnoreCase("6")) {
//            lista1 = new ListaCalzadoPedido();
//            lista1.onModuleLoad5(clienteM, vendedorM, colorM, materialM);
//
//        //Panel pan_centro = lista1.getPanel();
//        }
        if (opcion.equalsIgnoreCase("7")) {
      lista1 = new ListaCalzadoPedido();    //   lista1.onModuleLoad8(lineaM);
lista1.onModuleLoad8(materialM);
        //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("8")) {
             lista1 = new ListaCalzadoPedido();
              lista1.onModuleLoad11();

        //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("9")) {
                     lista1 = new ListaCalzadoPedido();
lista1.onModuleLoad3();
        //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("10")) {
               lista1 = new ListaCalzadoPedido();
lista1.onModuleLoad4();

               //Panel pan_centro = lista1.getPanel();
        }
        if (opcion.equalsIgnoreCase("11")) {
               lista1 = new ListaCalzadoPedido();
lista1.onModuleLoad11();
        }
        if (opcion.equalsIgnoreCase("12")) {
               lista1 = new ListaCalzadoPedido();
lista1.onModuleLoad12();

        }


        Panel pan_centro = lista1.getPanel();

        FormPanel for_panel1 = new FormPanel();
        for_panel1.setBaseCls("x-plain");
        for_panel1.setWidth(330);
        for_panel1.setLabelWidth(100);
        tex_marca = new TextField("Marca", "marca", 200);
        tex_marca.setValue(marca);
        tex_marca.setReadOnly(true);
       // tex_modeloCP = new TextField("Modelo CP", "idmodelo", 200);
        //tex_modeloCP.setValue("idmodelo");
tex_numeropedido = new TextField("Codigo Registro", "numeropedido", 200);
        tex_numeropedido.setReadOnly(true);
        tex_numeropedido.setValue(numeropedido);
com_estilo = new ComboBox("Estilos", "idestilo");

        for_panel1.add(tex_marca);
         for_panel1.add(tex_numeropedido);
  for_panel1.add(com_estilo);

        // for_panel1.add(tex_modeloCP);

        FormPanel for_panel2 = new FormPanel();
        for_panel2.setBaseCls("x-plain");
        for_panel2.setWidth(330);
        for_panel2.setLabelWidth(100);
        
        com_modeloCV = new ComboBox("ModeloCV/HOME", "idmodelo");
        //com_modeloCV.setWidth(20);
tex_modeloCP = new TextField("Buscar Modelos", "idmodelo", 200);
        //tex_modeloCP.setValue("idmodelo");

       
      //  for_panel2.add(tex_numeropedido);
        for_panel2.add(com_modeloCV);
   for_panel2.add(tex_modeloCP);

        FormPanel for_panel3 = new FormPanel();
        for_panel3.setBaseCls("x-plain");
        for_panel3.setWidth(300);
        for_panel3.setLabelWidth(100);

        dat_fecha = new DateField("Fecha", "d-m-Y");
        Date date = new Date();
        dat_fecha.setValue(Utils.getStringOfDate(date));

        for_panel3.add(dat_fecha);



        pan_norte.add(new PaddedPanel(for_panel1, 10));
        pan_norte.add(new PaddedPanel(for_panel2, 10));
        pan_norte.add(new PaddedPanel(for_panel3, 10));
//        pan_norte.add(new PaddedPanel(for_panel12, 0, 0, 13, 10));

        FormPanel for_panel4 = new FormPanel();
        for_panel4.setBaseCls("x-plain");
        tex_totalpares = new TextField("Total Pares", "totalpares");
        tex_totalcaja = new TextField("Total Caja", "totalcaja");

        for_panel4.add(tex_totalpares);
        for_panel4.add(tex_totalcaja);


//        FormPanel for_panel5 = new FormPanel();
//        for_panel5.setBaseCls("x-plain");
//        tex_descuentoPorcentaje = new TextField("Descuento (%)", "desuentoporcentaje");
//        tex_descuento = new TextField("Descuento", "descuento");
//        tex_devuelto = new TextField("Cambio", "cambio");
//        for_panel5.add(tex_descuentoPorcentaje);
//        for_panel5.add(tex_descuento);
//        for_panel5.add(tex_devuelto);

        FormPanel for_panel6 = new FormPanel();
        for_panel6.setBaseCls("x-plain");
        tea_descripcion = new TextArea("Observacion", "observacion");
        tea_descripcion.setWidth("100%");

        for_panel6.add(tea_descripcion);

        Panel pan_botones = new Panel();
        pan_botones.setLayout(new HorizontalLayout(10));
        pan_botones.setBaseCls("x-plain");
        //       pan_botones.setHeight(40);
        but_aceptar = new Button("Guardar");
        but_cancelar = new Button("Cancelar");
        but_limpiar = new Button("Limpiar");
        //but_verproducto = new Button("Ver Producto");
        pan_botones.add(but_aceptar);
        pan_botones.add(but_cancelar);
        pan_botones.add(but_limpiar);
        //pan_botones.add(but_verproducto);

        pan_sud.add(new PaddedPanel(for_panel4, 0, 0, 13, 10));
        //pan_sud.add(new PaddedPanel(for_panel5, 0, 0, 13, 10));
        pan_sud.add(new PaddedPanel(for_panel6, 3, 0, 13, 10));
        pan_sud.add(new PaddedPanel(pan_botones, 10, 200, 10, 10), new TableLayoutData(3));


        pan_borderLayout.add(pan_norte, new BorderLayoutData(RegionPosition.NORTH));
        pan_borderLayout.add(pan_centro, new BorderLayoutData(RegionPosition.CENTER));
        pan_borderLayout.add(pan_sud, new BorderLayoutData(RegionPosition.SOUTH));
        add(pan_borderLayout);

        initCombos();
        initValues();
        addListeners();


    }

    private void initCombos() {


         SimpleStore proveedorStore1 = new SimpleStore(new String[]{"idestilo", "nombre"}, estiloM);
        proveedorStore1.load();


        com_estilo.setMinChars(1);
        //com_modeloCV.setFieldLabel("Modelo");
        com_estilo.setStore(proveedorStore1);
        com_estilo.setValueField("idestilo");
        com_estilo.setDisplayField("nombre");
        com_estilo.setForceSelection(true);
        com_estilo.setMode(ComboBox.LOCAL);
        com_estilo.setEmptyText("Buscar Estilo");
        com_estilo.setLoadingText("buscando...");
        com_estilo.setTypeAhead(true);
        com_estilo.setSelectOnFocus(true);
        com_estilo.setWidth(130);
//String valor = com_modeloCV.setDisplayField("codigo");
        com_estilo.setHideTrigger(true);

        
        final SimpleStore proveedorStore = new SimpleStore(new String[]{"idmodelo","idestilo", "codigo"}, modeloM);
        proveedorStore.load();


        com_modeloCV.setMinChars(1);
        //com_modeloCV.setFieldLabel("Modelo");
        com_modeloCV.setStore(proveedorStore);
        com_modeloCV.setValueField("idmodelo");
        com_modeloCV.setDisplayField("codigo");
        com_modeloCV.setForceSelection(true);
        com_modeloCV.setMode(ComboBox.LOCAL);
       // com_modeloCV.setEmptyText("Buscar Modelo");
        com_modeloCV.setLoadingText("buscando...");
        com_modeloCV.setTypeAhead(true);
        com_modeloCV.setSelectOnFocus(true);
        com_modeloCV.setWidth(130);
//String valor = com_modeloCV.setDisplayField("codigo");
        com_modeloCV.setHideTrigger(true);

   com_estilo.addListener(new ComboBoxListenerAdapter() {

            @Override
            public void onSelect(ComboBox comboBox, Record record, int index) {
                com_modeloCV.setValue("");
                proveedorStore.filter("idestilo", comboBox.getValue());
            }
        });


    }

    private void initValues() {
        //com.google.gwt.user.client.Window.alert("//" + tipocambio);

        tex_totalpares.setValue("0");
        tex_totalcaja.setValue("0");

    }

    private void addListeners() {

        //**************************************************
        //************* BOTON CANCELAR   *******************
        //**************************************************
       but_cancelar.addListener(new ButtonListenerAdapter() {

            @Override
            public void onClick(Button button, EventObject e) {

                closeTabCompraDirecta();
            }
        });
        //**************************************************
        //************* BOTON ACEPTAR *******************
        //**************************************************
        but_aceptar.addListener(new ButtonListenerAdapter() {

            @Override
            public void onClick(Button button, EventObject e) {
//                if (Multivendedo.equalsIgnoreCase("SI")) {
//                    procesoValidar();
//                } else {
                createPedido(idmarca);
//                }
            }
        });


        but_limpiar.addListener(new ButtonListenerAdapter() {

            @Override
            public void onClick(Button button, EventObject e) {
                limpiarVentanaVenta();
            }
        });

        com_modeloCV.addListener(new TextFieldListenerAdapter() {

            @Override
            public void onSpecialKey(Field field, EventObject e) {

                if (e.getKey() == EventObject.ENTER) {
                    //String idmarca = field.getValueAsString().trim();
                    String idmodelo = com_modeloCV.getValueAsString().trim();
                    //String codigo = tex_producto.getValueAsString().trim();
                                          // MessageBox.alert("Por favor ingrese un modelo.");
                        com_modeloCV.focus();
                   
                        addListenerModelo(idmodelo);
                        com_modeloCV.focus();
                    // Utils.setErrorPrincipal("Usted debe introducir un id modelo antes.", "error");
                }
          if (e.getKey() == EventObject.HOME) {
                    //String idmarca = field.getValueAsString().trim();
                  //   String idmodelo = com_modeloCV.getValueAsString().trim();
                    //String codigo = tex_producto.getValueAsString().trim();
                             
                         lista1.buscarProductos(idmarca);
                         //buscarProductos(idmodelo);
                                  // addListenerBuscador(idmodelo);
                                    com_modeloCV.focus();
                    // Utils.setErrorPrincipal("Usted debe introducir un id modelo antes.", "error");
                                      
                }
            //Utils.setErrorPrincipal("Usted debe introducir un id modelo antes.", "error");
            }

            private void addListenerModelo(String buscando) {

                 String idestilo = com_estilo.getValue();
//String enlace = "php/VentaMayor.php?funcion=BuscarDatosClienteSaldo&idcliente="+idcliente+"&idmarca="+idmarca;
                String enlace = "php/Pedido.php?funcion=BuscarModeloPorIdtienda&idmodelo="+buscando+"&idestilo="+idestilo;

   //             String enlace = "php/Pedido.php?funcion=BuscarModeloPorId&idmodelo=" + buscando;
                Utils.setErrorPrincipal("Cargando parametros del modelo", "cargar");
                final Conector conec = new Conector(enlace, false);
                {
                    try {
                        conec.getRequestBuilder().sendRequest(null, new RequestCallback() {
                            public void onResponseReceived(Request request, Response response) {
                                String data = response.getText();
                                JSONValue jsonValue = JSONParser.parse(data);
                                JSONObject jsonObject;
                                if ((jsonObject = jsonValue.isObject()) != null) {
                                    String errorR = Utils.getStringOfJSONObject(jsonObject, "error");
                                    String mensajeR = Utils.getStringOfJSONObject(jsonObject, "mensaje");
                                    if (errorR.equalsIgnoreCase("true")) {
                                        Utils.setErrorPrincipal(mensajeR, "mensaje");
                                        JSONValue marcaV = jsonObject.get("resultado");
                                        JSONObject marcaO;
                                        if ((marcaO = marcaV.isObject()) != null) {
                                            String idmodelo = Utils.getStringOfJSONObject(marcaO, "idmodelo");
                                            String coleccion = Utils.getStringOfJSONObject(marcaO, "coleccion");
                                            String codigo = Utils.getStringOfJSONObject(marcaO, "codigo");
                                            //Object[][] lineas = Utils.getArrayOfJSONObject(marcaO, "lineaM", new String[]{"idcliente", "codigo"});
                                            if (opcion.equalsIgnoreCase("1")) {
                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo,coleccion, codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();

                                            }
                                            if (opcion.equalsIgnoreCase("2")) {

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo, coleccion,codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                            if (opcion.equalsIgnoreCase("3")) {

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo,coleccion, codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
//
                                            if (opcion.equalsIgnoreCase("4")) {
                                           //     String stylename = Utils.getStringOfJSONObject(marcaO, "stylename");

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo,coleccion, codigo,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);

                                                lista1.getGrid().startEditing(0, 0);

                                                com_modeloCV.focus();
                                            }
                                                  if (opcion.equalsIgnoreCase("5")) {
//ojo
                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                       //     idmodelo, codigo, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""});
                                                            idmodelo,coleccion, codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});

                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                             //   lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                            if (opcion.equalsIgnoreCase("6")) {
                                                  String coleccion1= Utils.getStringOfJSONObject(marcaO, "coleccion");

  Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo, coleccion1,codigo,"", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0, 0, 1, 0});
                                                                                            lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);

                                               Float to = new Float(0);
                                            for (int i = 0; i < lista1.getStore().getRecords().length; i++) {
                                                to += lista1.getStore().getRecords()[i].getAsFloat("totalpares");
                                            }
                                             tex_totalpares.setValue(to.toString());
                                              Float toc = new Float(0);
                                            for (int i = 0; i < lista1.getStore().getRecords().length; i++) {
                                                toc += lista1.getStore().getRecords()[i].getAsFloat("totalcajas");
                                            }
                                             tex_totalcaja.setValue(toc.toString());

                                              com_modeloCV.setValue("");
                                                com_modeloCV.focus();

                                            }

                                            if (opcion.equalsIgnoreCase("7")) {
                                                     String coleccion1= Utils.getStringOfJSONObject(marcaO, "coleccion");

 Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                  idmodelo, coleccion1,codigo,"", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0, 0, 1, 0});
                                                                                                                   lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                   Float to = new Float(0);
                                            for (int i = 0; i < lista1.getStore().getRecords().length; i++) {
                                                to += lista1.getStore().getRecords()[i].getAsFloat("totalpares");
                                            }
                                             tex_totalpares.setValue(to.toString());
                                              Float toc = new Float(0);
                                            for (int i = 0; i < lista1.getStore().getRecords().length; i++) {
                                                toc += lista1.getStore().getRecords()[i].getAsFloat("totalcajas");
                                            }
                                             tex_totalcaja.setValue(toc.toString());

                                              com_modeloCV.setValue("");
                                                com_modeloCV.focus();
                                            }
                                               if (opcion.equalsIgnoreCase("8")) {
                                               // String stylename = Utils.getStringOfJSONObject(marcaO, "stylename");
  Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo,coleccion, codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                                                             lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                                 if (opcion.equalsIgnoreCase("9")) {

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo, codigo, "", "", "", "", "", "", "", "", "", "", "", "", "", ""});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                            if (opcion.equalsIgnoreCase("10")) {

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo,coleccion, codigo, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                            
                                           
                                         
                                            if (opcion.equalsIgnoreCase("11")) {

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo, codigo,coleccion, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
                                       
                                       
                                            if (opcion.equalsIgnoreCase("12")) {
                                                String stylename = Utils.getStringOfJSONObject(marcaO, "stylename");

                                                Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
                                                            idmodelo, codigo,coleccion, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0});
                                                lista1.getGrid().stopEditing();
                                                lista1.getGrid().getStore().insert(0, registroCompra);
                                                lista1.getGrid().startEditing(0, 0);
                                                com_modeloCV.focus();
                                            }
//                                    Record registroCompra = lista1.getRecordDef().createRecord(new Object[]{
//                                            idmodelo, codigo,"","","", "", "", "","","","","","","","","","","","","","","","","","","","","","","",""});
//                                    lista1.getGrid().stopEditing();
//                                    lista1.getGrid().getStore().insert(0, registroCompra);
//                                    lista1.getGrid().startEditing(0, 0);

                                        } else {
                                            MessageBox.alert("No existe el modelo/pruebe con la tecla HOME");
                                        }

                                    }
                                } else {
                                }
                                throw new UnsupportedOperationException("Not supported yet.");
                            }

                            public void onError(Request request, Throwable exception) {
                                throw new UnsupportedOperationException("Not supported yet.");
                            }
                        });

                    } catch (RequestException e) {
                        e.getMessage();
                        MessageBox.alert("Ocurrio un error al conectarse con el SERVIDOR");
                    }

                }

            }
        });
//oj
          tex_modeloCP.addListener(new TextFieldListenerAdapter() {

            //private FormularioPedidoKardex kardex;
            @Override
            public void onSpecialKey(Field field, EventObject e) {
                if (e.getKey() == EventObject.ENTER) {
                    // abrir la lsita de productos for_proveedor
                    //MessageBox.alert(field.getValueAsString());
                    //String idmarca = field.getValueAsString().trim();
                    String idmodelo = tex_modeloCP.getValueAsString().trim();
                    //String idproductos = tex_producto.getValueAsString().trim();
                    if (idmodelo.isEmpty()) {
                        MessageBox.alert("Por favor ingrese modelo a buscar.");
                        tex_modeloCP.focus();
                    } else {
                       // if (findByCodigoProducto(idmarca,idmodelo)) {
                            //addListenerKardex();

     //                      if (opcion.equalsIgnoreCase("5")) {
       //     lista1.onModuleLoad2(idmarca,idmodelo);
        //}
                             lista1.buscarProductosmodelo(idmarca,idmodelo);
                            tex_modeloCP.focus();
          //                  MessageBox.alert("No existe el modelo.");
                           // tex_modeloCP.focus();
                        
                    }
                }
            }


        });

                  com_estilo.addListener(new TextFieldListenerAdapter() {

            //private FormularioPedidoKardex kardex;
            @Override
            public void onSpecialKey(Field field, EventObject e) {
                if (e.getKey() == EventObject.ENTER) {
                    String idestilo = com_estilo.getValueAsString().trim();
                    //String idproductos = tex_producto.getValueAsString().trim();
                    if (idestilo.isEmpty()) {
                        MessageBox.alert("Por favor ingrese estilo a buscar.");
                        com_estilo.focus();
                    } else {
                         lista1.buscarProductosestilo(idmarca,idestilo);
                            com_estilo.focus();
          
                    }
                }
            }


        });


        //**************************************************
        //*************CALCULAR TOTAL DE COMPRA ************
        //**************************************************
        lista1.getGrid().addEditorGridListener(new EditorGridListenerAdapter() {

            @Override
            public void onAfterEdit(GridPanel grid, Record record, String field, Object newValue, Object oldValue, int rowIndex, int colIndex) {
                calcularSubTotal(grid, record, field, newValue, oldValue, rowIndex, colIndex);
            }
        });




    }
  public void limpiarVentanaVenta() {
        lista1.LimpiarGrid();
        tex_totalpares.setValue("0");
        tex_totalcaja.setValue("0");
        tea_descripcion.setValue("");
       com_estilo.setValue("");
        //com_empleado.setValue("No existe el Cliente");
    }
      public void calcularSubTotal(GridPanel grid, Record record, String field, Object newValue, Object oldValue, int rowIndex, int colIndex) {
        String temp = newValue.toString();
        Float old = new Float(oldValue.toString());
        Float talla14 = record.getAsFloat("14");
        Float talla15 = record.getAsFloat("15");
        Float talla16 = record.getAsFloat("16");
        Float talla17 = record.getAsFloat("17");
        Float talla18 = record.getAsFloat("18");
        Float talla19 = record.getAsFloat("19");
        Float talla20 = record.getAsFloat("20");
        Float talla21 = record.getAsFloat("21");
        Float talla22 = record.getAsFloat("22");
        Float talla23 = record.getAsFloat("23");
        Float talla24 = record.getAsFloat("24");
        Float talla25 = record.getAsFloat("25");
        Float talla26 = record.getAsFloat("26");
        Float talla27 = record.getAsFloat("27");
        Float talla28 = record.getAsFloat("28");
        Float talla29 = record.getAsFloat("29");
        Float talla30 = record.getAsFloat("30");
        Float talla31 = record.getAsFloat("31");
        Float talla32 = record.getAsFloat("32");
        Float talla33 = record.getAsFloat("33");
        Float talla34 = record.getAsFloat("34");
        Float talla35 = record.getAsFloat("35");
        Float talla36 = record.getAsFloat("36");
        Float talla37 = record.getAsFloat("37");
        Float talla38 = record.getAsFloat("38");
        Float talla39 = record.getAsFloat("39");
        Float talla40 = record.getAsFloat("40");
        Float talla41 = record.getAsFloat("41");
        Float talla42 = record.getAsFloat("42");
        Float talla43 = record.getAsFloat("43");
        Float talla44 = record.getAsFloat("44");
        Float talla45 = record.getAsFloat("45");
        Float talla1 = record.getAsFloat("1");
        Float talla1m = record.getAsFloat("1m");
        Float talla2 = record.getAsFloat("2");
        Float talla2m = record.getAsFloat("2m");
        Float talla3 = record.getAsFloat("3");
        Float talla3m = record.getAsFloat("3m");
        Float talla4 = record.getAsFloat("4");
        Float talla4m = record.getAsFloat("4m");
        Float talla5 = record.getAsFloat("5");
        Float talla5m = record.getAsFloat("5m");
        Float talla6 = record.getAsFloat("6");
        Float talla6m = record.getAsFloat("6m");
        Float talla7 = record.getAsFloat("7");
        Float talla7m = record.getAsFloat("7m");
        Float talla8 = record.getAsFloat("8");
        Float talla8m = record.getAsFloat("8m");
        Float talla9 = record.getAsFloat("9");
        Float talla9m = record.getAsFloat("9m");
        Float talla10 = record.getAsFloat("10");
        Float talla10m = record.getAsFloat("10m");
        Float talla11 = record.getAsFloat("11");
        Float talla11m = record.getAsFloat("11m");
        Float talla12 = record.getAsFloat("12");

         Float totalca = new Float(0);
        Float totalpa = new Float(0);

        Float ne = old;
        try {
            ne = new Float(temp);
        } catch (Exception e) {
            com.google.gwt.user.client.Window.alert("atapadp  " + e.getMessage());
            ne = old;
        }

        if ((opcion.equalsIgnoreCase("6")) || (opcion.equalsIgnoreCase("7")) || (opcion.equalsIgnoreCase("8"))) {
            record.commit();
            record.set("totalpares", talla33 + talla34 + talla35 + talla36 + talla37 + talla38 + talla39 + talla40 + talla41 + talla42 + talla43 + talla44 + talla45);
//            totalpa = talla33 + talla34 + talla35 + talla36 + talla37 + talla38 + talla39 + talla40 + talla41 + talla42 + talla43 + talla44 + talla45;
//            totalca = totalpa / 12;
//            record.set("totalcajas", totalca);


            for (int i = 0; i <
                    grid.getStore().getRecords().length; i++) {
                totalca += grid.getStore().getRecords()[i].getAsFloat("totalcajas");
                totalpa += grid.getStore().getRecords()[i].getAsFloat("totalpares");

            }
        }
        if ((opcion.equalsIgnoreCase("2")) || (opcion.equalsIgnoreCase("1")) || (opcion.equalsIgnoreCase("3")) || (opcion.equalsIgnoreCase("4"))) {
            record.commit();
            record.set("totalpares", talla14 + talla15 + talla16 + talla17 + talla18 + talla19 + talla20 + talla21 + talla22 + talla23 + talla24 + talla25 + talla26 + talla27 + talla28 + talla29 + talla30 + talla31 + talla32 + talla33 + talla34 + talla35 + talla36 + talla37 + talla38 + talla39 + talla40 + talla41 + talla42 + talla43 + talla44 + talla45);
//            totalpa = talla33 + talla34 + talla35 + talla36 + talla37 + talla38 + talla39 + talla40 + talla41 + talla42 + talla43 + talla44 + talla45;
//            totalca = totalpa / 12;
//            record.set("totalcajas", totalca);


            for (int i = 0; i <
                    grid.getStore().getRecords().length; i++) {
                totalca += grid.getStore().getRecords()[i].getAsFloat("totalcajas");
                totalpa += grid.getStore().getRecords()[i].getAsFloat("totalpares");

            }
        }
        if ((opcion.equalsIgnoreCase("10")) || (opcion.equalsIgnoreCase("11")) || (opcion.equalsIgnoreCase("12"))) {
            record.commit();
            record.set("totalpares", talla1 + talla1m + talla2 + talla2m + talla3 + talla3m + talla4 + talla4m + talla5 + talla5m + talla6 + talla6m + talla7 + talla7m + talla8 + talla8m + talla9 + talla9m + talla10 + talla10m + talla11 + talla11m + talla12);
//            totalpa = talla33 + talla34 + talla35 + talla36 + talla37 + talla38 + talla39 + talla40 + talla41 + talla42 + talla43 + talla44 + talla45;
//            totalca = totalpa / 12;
//            record.set("totalcajas", totalca);


            for (int i = 0; i <
                    grid.getStore().getRecords().length; i++) {
                totalca += grid.getStore().getRecords()[i].getAsFloat("totalcajas");
                totalpa += grid.getStore().getRecords()[i].getAsFloat("totalpares");

            }
        }

        tex_totalpares.setValue(totalpa.toString());
        //tex_totalpares.
        tex_totalcaja.setValue(totalca.toString());

    }

    public void createPedido(String idmarca) {


        String marca1 = tex_marca.getValueAsString();
        String numeropedido1 = tex_numeropedido.getValueAsString();

        String totalpares = tex_totalpares.getValueAsString();
        String totalcaja = tex_totalcaja.getValueAsString();
        String descripcion = tea_descripcion.getValueAsString();

//        Date date = dat_fecha.getValue();


        Record[] records = lista1.getStore().getRecords();
        JSONArray productos = new JSONArray();
        JSONObject productoObject;

        JSONObject compraObject = new JSONObject();
        compraObject.put("idmarca", new JSONString(idmarca));
        compraObject.put("marca", new JSONString(marca1));
        compraObject.put("numeropedido", new JSONString(numeropedido1));
        compraObject.put("totalpares", new JSONString(totalpares));
        compraObject.put("totalcaja", new JSONString(totalcaja));
        compraObject.put("descripcion", new JSONString(descripcion));
//        compraObject.put("fecha", new JSON(date));


        for (int i = 0; i < records.length; i++) {

            if (opcion.equalsIgnoreCase("1")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("14", new JSONString(records[i].getAsString("14")));
                productoObject.put("15", new JSONString(records[i].getAsString("15")));
                productoObject.put("16", new JSONString(records[i].getAsString("16")));
                productoObject.put("17", new JSONString(records[i].getAsString("17")));
                productoObject.put("18", new JSONString(records[i].getAsString("18")));
                productoObject.put("19", new JSONString(records[i].getAsString("19")));
                productoObject.put("20", new JSONString(records[i].getAsString("20")));
                productoObject.put("21", new JSONString(records[i].getAsString("21")));
                productoObject.put("22", new JSONString(records[i].getAsString("22")));
                productoObject.put("23", new JSONString(records[i].getAsString("23")));
                productoObject.put("24", new JSONString(records[i].getAsString("24")));
                productoObject.put("25", new JSONString(records[i].getAsString("25")));
                productoObject.put("26", new JSONString(records[i].getAsString("26")));
                productoObject.put("27", new JSONString(records[i].getAsString("27")));
                productoObject.put("28", new JSONString(records[i].getAsString("28")));
                productoObject.put("29", new JSONString(records[i].getAsString("29")));
                productoObject.put("30", new JSONString(records[i].getAsString("30")));
                productoObject.put("31", new JSONString(records[i].getAsString("31")));
                productoObject.put("32", new JSONString(records[i].getAsString("32")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;

            }
            if (opcion.equalsIgnoreCase("2")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("14", new JSONString(records[i].getAsString("14")));
                productoObject.put("15", new JSONString(records[i].getAsString("15")));
                productoObject.put("16", new JSONString(records[i].getAsString("16")));
                productoObject.put("17", new JSONString(records[i].getAsString("17")));
                productoObject.put("18", new JSONString(records[i].getAsString("18")));
                productoObject.put("19", new JSONString(records[i].getAsString("19")));
                productoObject.put("20", new JSONString(records[i].getAsString("20")));
                productoObject.put("21", new JSONString(records[i].getAsString("21")));
                productoObject.put("22", new JSONString(records[i].getAsString("22")));
                productoObject.put("23", new JSONString(records[i].getAsString("23")));
                productoObject.put("24", new JSONString(records[i].getAsString("24")));
                productoObject.put("25", new JSONString(records[i].getAsString("25")));
                productoObject.put("26", new JSONString(records[i].getAsString("26")));
                productoObject.put("27", new JSONString(records[i].getAsString("27")));
                productoObject.put("28", new JSONString(records[i].getAsString("28")));
                productoObject.put("29", new JSONString(records[i].getAsString("29")));
                productoObject.put("30", new JSONString(records[i].getAsString("30")));
                productoObject.put("31", new JSONString(records[i].getAsString("31")));
                productoObject.put("32", new JSONString(records[i].getAsString("32")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;

            }
            if (opcion.equalsIgnoreCase("3")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("14", new JSONString(records[i].getAsString("14")));
                productoObject.put("15", new JSONString(records[i].getAsString("15")));
                productoObject.put("16", new JSONString(records[i].getAsString("16")));
                productoObject.put("17", new JSONString(records[i].getAsString("17")));
                productoObject.put("18", new JSONString(records[i].getAsString("18")));
                productoObject.put("19", new JSONString(records[i].getAsString("19")));
                productoObject.put("20", new JSONString(records[i].getAsString("20")));
                productoObject.put("21", new JSONString(records[i].getAsString("21")));
                productoObject.put("22", new JSONString(records[i].getAsString("22")));
                productoObject.put("23", new JSONString(records[i].getAsString("23")));
                productoObject.put("24", new JSONString(records[i].getAsString("24")));
                productoObject.put("25", new JSONString(records[i].getAsString("25")));
                productoObject.put("26", new JSONString(records[i].getAsString("26")));
                productoObject.put("27", new JSONString(records[i].getAsString("27")));
                productoObject.put("28", new JSONString(records[i].getAsString("28")));
                productoObject.put("29", new JSONString(records[i].getAsString("29")));
                productoObject.put("30", new JSONString(records[i].getAsString("30")));
                productoObject.put("31", new JSONString(records[i].getAsString("31")));
                productoObject.put("32", new JSONString(records[i].getAsString("32")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));

                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }
            if (opcion.equalsIgnoreCase("4")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("14", new JSONString(records[i].getAsString("14")));
                productoObject.put("15", new JSONString(records[i].getAsString("15")));
                productoObject.put("16", new JSONString(records[i].getAsString("16")));
                productoObject.put("17", new JSONString(records[i].getAsString("17")));
                productoObject.put("18", new JSONString(records[i].getAsString("18")));
                productoObject.put("19", new JSONString(records[i].getAsString("19")));
                productoObject.put("20", new JSONString(records[i].getAsString("20")));
                productoObject.put("21", new JSONString(records[i].getAsString("21")));
                productoObject.put("22", new JSONString(records[i].getAsString("22")));
                productoObject.put("23", new JSONString(records[i].getAsString("23")));
                productoObject.put("24", new JSONString(records[i].getAsString("24")));
                productoObject.put("25", new JSONString(records[i].getAsString("25")));
                productoObject.put("26", new JSONString(records[i].getAsString("26")));
                productoObject.put("27", new JSONString(records[i].getAsString("27")));
                productoObject.put("28", new JSONString(records[i].getAsString("28")));
                productoObject.put("29", new JSONString(records[i].getAsString("29")));
                productoObject.put("30", new JSONString(records[i].getAsString("30")));
                productoObject.put("31", new JSONString(records[i].getAsString("31")));
                productoObject.put("32", new JSONString(records[i].getAsString("32")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));


//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }
            if (opcion.equalsIgnoreCase("5")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("39", new JSONString(records[i].getAsString("39")));
                productoObject.put("40", new JSONString(records[i].getAsString("40")));
                productoObject.put("41", new JSONString(records[i].getAsString("41")));
                productoObject.put("42", new JSONString(records[i].getAsString("42")));
                productoObject.put("43", new JSONString(records[i].getAsString("43")));
                productoObject.put("44", new JSONString(records[i].getAsString("44")));
                productoObject.put("45", new JSONString(records[i].getAsString("45")));

//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }
            if (opcion.equalsIgnoreCase("6")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("color", new JSONString(records[i].getAsString("color")));
                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));

                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("39", new JSONString(records[i].getAsString("39")));
                productoObject.put("40", new JSONString(records[i].getAsString("40")));
                productoObject.put("41", new JSONString(records[i].getAsString("41")));
                productoObject.put("42", new JSONString(records[i].getAsString("42")));
                productoObject.put("43", new JSONString(records[i].getAsString("43")));
                productoObject.put("44", new JSONString(records[i].getAsString("44")));
                productoObject.put("45", new JSONString(records[i].getAsString("45")));

//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }
            if (opcion.equalsIgnoreCase("7")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("material", new JSONString(records[i].getAsString("material")));
                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));

                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("39", new JSONString(records[i].getAsString("39")));
                productoObject.put("40", new JSONString(records[i].getAsString("40")));
                productoObject.put("41", new JSONString(records[i].getAsString("41")));
                productoObject.put("42", new JSONString(records[i].getAsString("42")));
                productoObject.put("43", new JSONString(records[i].getAsString("43")));
                productoObject.put("44", new JSONString(records[i].getAsString("44")));
                productoObject.put("45", new JSONString(records[i].getAsString("45")));

//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }

            if (opcion.equalsIgnoreCase("8")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("33", new JSONString(records[i].getAsString("33")));
                productoObject.put("34", new JSONString(records[i].getAsString("34")));
                productoObject.put("35", new JSONString(records[i].getAsString("35")));
                productoObject.put("36", new JSONString(records[i].getAsString("36")));
                productoObject.put("37", new JSONString(records[i].getAsString("37")));
                productoObject.put("38", new JSONString(records[i].getAsString("38")));
                productoObject.put("39", new JSONString(records[i].getAsString("39")));
                productoObject.put("40", new JSONString(records[i].getAsString("40")));
                productoObject.put("41", new JSONString(records[i].getAsString("41")));
                productoObject.put("42", new JSONString(records[i].getAsString("42")));
                productoObject.put("43", new JSONString(records[i].getAsString("43")));
                productoObject.put("44", new JSONString(records[i].getAsString("44")));
                productoObject.put("45", new JSONString(records[i].getAsString("45")));


                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }

            if (opcion.equalsIgnoreCase("10")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("1", new JSONString(records[i].getAsString("1")));
                productoObject.put("1m", new JSONString(records[i].getAsString("1m")));
                productoObject.put("2", new JSONString(records[i].getAsString("2")));
                productoObject.put("2m", new JSONString(records[i].getAsString("2m")));
                productoObject.put("3", new JSONString(records[i].getAsString("3")));
                productoObject.put("3m", new JSONString(records[i].getAsString("3m")));
                productoObject.put("4", new JSONString(records[i].getAsString("4")));
                productoObject.put("4m", new JSONString(records[i].getAsString("4m")));
                productoObject.put("5", new JSONString(records[i].getAsString("5")));
                productoObject.put("5m", new JSONString(records[i].getAsString("5m")));
                productoObject.put("6", new JSONString(records[i].getAsString("6")));
                productoObject.put("6m", new JSONString(records[i].getAsString("6m")));
                productoObject.put("7", new JSONString(records[i].getAsString("7")));
                productoObject.put("7m", new JSONString(records[i].getAsString("7m")));
                productoObject.put("8", new JSONString(records[i].getAsString("8")));
                productoObject.put("8m", new JSONString(records[i].getAsString("8m")));
                productoObject.put("9", new JSONString(records[i].getAsString("9")));
                productoObject.put("9m", new JSONString(records[i].getAsString("9m")));
                productoObject.put("10", new JSONString(records[i].getAsString("10")));
                productoObject.put("10m", new JSONString(records[i].getAsString("10m")));
                productoObject.put("11", new JSONString(records[i].getAsString("11")));
                productoObject.put("11m", new JSONString(records[i].getAsString("11m")));
                productoObject.put("12", new JSONString(records[i].getAsString("12")));
                productoObject.put("opcion", new JSONString("americano"));
//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }
            if (opcion.equalsIgnoreCase("11")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("1", new JSONString(records[i].getAsString("1")));
                productoObject.put("1m", new JSONString(records[i].getAsString("1m")));
                productoObject.put("2", new JSONString(records[i].getAsString("2")));
                productoObject.put("2m", new JSONString(records[i].getAsString("2m")));
                productoObject.put("3", new JSONString(records[i].getAsString("3")));
                productoObject.put("3m", new JSONString(records[i].getAsString("3m")));
                productoObject.put("4", new JSONString(records[i].getAsString("4")));
                productoObject.put("4m", new JSONString(records[i].getAsString("4m")));
                productoObject.put("5", new JSONString(records[i].getAsString("5")));
                productoObject.put("5m", new JSONString(records[i].getAsString("5m")));
                productoObject.put("6", new JSONString(records[i].getAsString("6")));
                productoObject.put("6m", new JSONString(records[i].getAsString("6m")));
                productoObject.put("7", new JSONString(records[i].getAsString("7")));
                productoObject.put("7m", new JSONString(records[i].getAsString("7m")));
                productoObject.put("8", new JSONString(records[i].getAsString("8")));
                productoObject.put("8m", new JSONString(records[i].getAsString("8m")));
                productoObject.put("9", new JSONString(records[i].getAsString("9")));
                productoObject.put("9m", new JSONString(records[i].getAsString("9m")));
                productoObject.put("10", new JSONString(records[i].getAsString("10")));
                productoObject.put("10m", new JSONString(records[i].getAsString("10m")));
                productoObject.put("11", new JSONString(records[i].getAsString("11")));
                productoObject.put("11m", new JSONString(records[i].getAsString("11m")));
                productoObject.put("12", new JSONString(records[i].getAsString("12")));
                productoObject.put("opcion", new JSONString("americano"));


//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }

            if (opcion.equalsIgnoreCase("12")) {
                productoObject = new JSONObject();
                productoObject.put("codigo", new JSONString(records[i].getAsString("codigo")));
                productoObject.put("idmodelo", new JSONString(records[i].getAsString("idmodelo")));
                productoObject.put("1", new JSONString(records[i].getAsString("1")));
                productoObject.put("1m", new JSONString(records[i].getAsString("1m")));
                productoObject.put("2", new JSONString(records[i].getAsString("2")));
                productoObject.put("2m", new JSONString(records[i].getAsString("2m")));
                productoObject.put("3", new JSONString(records[i].getAsString("3")));
                productoObject.put("3m", new JSONString(records[i].getAsString("3m")));
                productoObject.put("4", new JSONString(records[i].getAsString("4")));
                productoObject.put("4m", new JSONString(records[i].getAsString("4m")));
                productoObject.put("5", new JSONString(records[i].getAsString("5")));
                productoObject.put("5m", new JSONString(records[i].getAsString("5m")));
                productoObject.put("6", new JSONString(records[i].getAsString("6")));
                productoObject.put("6m", new JSONString(records[i].getAsString("6m")));
                productoObject.put("7", new JSONString(records[i].getAsString("7")));
                productoObject.put("7m", new JSONString(records[i].getAsString("7m")));
                productoObject.put("8", new JSONString(records[i].getAsString("8")));
                productoObject.put("8m", new JSONString(records[i].getAsString("8m")));
                productoObject.put("9", new JSONString(records[i].getAsString("9")));
                productoObject.put("9m", new JSONString(records[i].getAsString("9m")));
                productoObject.put("10", new JSONString(records[i].getAsString("10")));
                productoObject.put("10m", new JSONString(records[i].getAsString("10m")));
                productoObject.put("11", new JSONString(records[i].getAsString("11")));
                productoObject.put("11m", new JSONString(records[i].getAsString("11m")));
                productoObject.put("12", new JSONString(records[i].getAsString("12")));
                productoObject.put("opcion", new JSONString("americano"));


//                productoObject.put("precio", new JSONString(records[i].getAsString("precio")));
//                productoObject.put("totalbs", new JSONString(records[i].getAsString("totalbs")));
                productoObject.put("totalpares", new JSONString(records[i].getAsString("totalpares")));
                productoObject.put("totalcajas", new JSONString(records[i].getAsString("totalcajas")));
                productos.set(i, productoObject);
                productoObject = null;
            }


        }

        JSONObject resultado = new JSONObject();
        resultado.put("ingreso", compraObject);
        resultado.put("calzados", productos);
        String datos = "resultado=" + resultado.toString();
        Utils.setErrorPrincipal("registrando datos", "cargar");
        String url = "./php/IngresoAlmacen.php?funcion=GuardarNuevoIngresoExtra&" + datos;

       // String url = "./php/Pedido.php?funcion=GuardarNuevoPedido&" + datos;
        //com.google.gwt.user.client.Window.alert("zzzz" + url);
        final Conector conec = new Conector(url, false, "GET");
        // com.google.gwt.user.client.Window.alert("error 9999 " + conec.toString());
        try {
            conec.getRequestBuilder().sendRequest(datos, new RequestCallback() {
                private EventObject e;

                public void onResponseReceived(Request request, Response response) {
                    String data = response.getText();
                    JSONValue jsonValue = JSONParser.parse(data);
                    JSONObject jsonObject;
                    if ((jsonObject = jsonValue.isObject()) != null) {
                        String errorR = Utils.getStringOfJSONObject(jsonObject, "error");
                        String mensajeR = Utils.getStringOfJSONObject(jsonObject, "mensaje");
                        if (errorR.equalsIgnoreCase("true")) {
                            Utils.setErrorPrincipal(mensajeR, "mensaje");

                           Window.alert(mensajeR);
                        String idventaG = Utils.getStringOfJSONObject(jsonObject, "resultado");
                          //      String enlTemp = "funcion=reporteventaHTML&idventadetalle=" + idventaG;

                            //          verReporte(enlTemp);
                       // AdicionCodigoBarraIngresoHTML&idingreso=ing-3
// String enlTemp = "funcion=AdicionCodigoBarraIngresoHTML&idingreso=" + idventaG;
 //                           verReporte(enlTemp);
limpiarVentanaVenta();
                            closeTabCompraDirecta();
                            closePanel();
                            
//                            Coleccion pan_compraDirecta = new Coleccion(Marca.this, idmarca, nombre);
                          


                        } else {
                            //Window.alert(mensajeR);
//                            com.google.gwt.user.client.Window.alert("error 1000");
                            Utils.setErrorPrincipal(mensajeR, "error");
                        }
                    } else {
//                        com.google.gwt.user.client.Window.alert("error 1001");
                        Utils.setErrorPrincipal("Error en la respuesta del servidor", "error");
                    }
                }

                public void onError(Request request, Throwable exception) {
                    //Window.alert("Ocurrio un error al conectar con el servidor ");
//                    com.google.gwt.user.client.Window.alert("error 1002");
                    Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
                }
            });
        } catch (RequestException ex) {
            //Window.alert("Ocurrio un error al conectar con el servidor");
//            com.google.gwt.user.client.Window.alert("error 1003");
            Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
        }
    //
    }

    public void closePanel() {
        this.destroy();
    }

    public void closeTabCompraDirecta() {
        this.remove("tab-" + COMPRA_DIRECTA_TABBED);
       SM.panel.getTabPanel().remove("tab-" + COMPRA_DIRECTA_TABBED);
       this.destroy();
        }

    private void verReporte(String enlace) {
        ReporteMediaCartaChorroWindow print = new ReporteMediaCartaChorroWindow(enlace);
        print.show();
    }

}
