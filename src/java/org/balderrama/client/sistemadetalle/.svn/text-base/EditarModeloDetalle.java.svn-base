/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.balderrama.client.sistemadetalle;

import com.google.gwt.http.client.Request;
import com.google.gwt.http.client.RequestCallback;
import com.google.gwt.http.client.RequestException;
import com.google.gwt.http.client.Response;
import com.google.gwt.json.client.JSONObject;
import com.google.gwt.json.client.JSONParser;
import com.google.gwt.json.client.JSONValue;
import com.gwtext.client.core.EventObject;
import com.gwtext.client.core.Position;
import com.gwtext.client.widgets.Button;
import com.gwtext.client.widgets.Window;
import com.gwtext.client.widgets.event.ButtonListenerAdapter;
import com.gwtext.client.widgets.form.FormPanel;
import com.gwtext.client.widgets.form.TextField;
import com.gwtext.client.widgets.layout.FitLayout;
import org.balderrama.client.util.Conector;
import org.balderrama.client.util.Utils;

/**
 *
 * @author buggy
 */
public class EditarModeloDetalle extends Window {

   
 
    private final int WINDOW_PADDING = 5;
    private FormPanel formPanel;

    private TextField tex_codigoM;
    private TextField tex_stylenameM;
    private TextField tex_marcaM;
    private TextField tex_colorM;
    private TextField tex_materialM;
    private TextField tex_detalleM;
    private TextField tex_imagenM;

    private Button but_aceptarP;
    private Button but_cancelarP;
    private String stylenameM;
    private String colorM;
    private String materialM;
    private String codigoM;
    private String imagenM;

    private String detalleM;
  
    private String marca;
  

    
    private boolean nuevo;
    private ModeloDetalle padre;

    public EditarModeloDetalle(String codigoM,String stylenameM,String marca,   String colorM, String materialM, String detalle,String imagenM, ModeloDetalle padre) {
        
        this.stylenameM = stylenameM;
        this.codigoM = codigoM;
        this.colorM = colorM;
        this.detalleM = detalle;
        this.materialM = materialM;
      

       
        this.imagenM = imagenM;
        this.marca = marca;

        

       

        this.padre = padre;

        String nombreBoton1 = "Guardar";
        String nombreBoton2 = "Cancelar";
        String tituloTabla = "Registar nuevo modelo";

        if (stylenameM != null) {
            nombreBoton1 = "Modificar";
            tituloTabla = "Editar Modelo";
            nuevo = false;
        } else {
            this.stylenameM = "nuevo";
            nuevo = true;

        }

        setId("win-modelo-detalle");
        but_aceptarP = new Button(nombreBoton1, new ButtonListenerAdapter() {

            @Override
            public void onClick(Button button, EventObject e) {
                if (nuevo == false) {
                    GuardarEditarMarca();
                } else {
                    GuardarNuevaMarca();
                }
            }
        });
        but_cancelarP = new Button(nombreBoton2, new ButtonListenerAdapter() {

            @Override
            public void onClick(Button button, EventObject e) {
                EditarModeloDetalle.this.close();
                EditarModeloDetalle.this.setModal(false);
            //formulario = null;
            }
        });

        setTitle(tituloTabla);
       setAutoHeight(true);
       setAutoWidth(true);
        setLayout(new FitLayout());
        setPaddings(WINDOW_PADDING);
        setButtonAlign(Position.CENTER);
        addButton(but_aceptarP);
        addButton(but_cancelarP);

        setCloseAction(Window.CLOSE);
        setPlain(true);
        formPanel = new FormPanel();
        formPanel.setBaseCls("x-plain");
   

        tex_codigoM = new TextField("Codigo", "codigo",100);
        tex_stylenameM = new TextField("Stylename", "stylename",200);


        tex_marcaM = new TextField("Marca", "marca",200);
        tex_marcaM.setReadOnly(true);
        tex_colorM = new TextField("Color", "color",200);
        tex_materialM = new TextField("Material", "matrial",200);
        tex_detalleM = new TextField("Detalle", "detalle",300);
        tex_imagenM = new TextField("Imagen", "imagen",200);

      



    
        formPanel.add(tex_codigoM);
        formPanel.add(tex_stylenameM);
        formPanel.add(tex_marcaM);
        formPanel.add(tex_colorM);
        formPanel.add(tex_materialM);
        formPanel.add(tex_detalleM);
        formPanel.add(tex_imagenM);

        add(formPanel);
   
        initValues();
    }



    

    private void initValues() {
        tex_codigoM.setValue(codigoM);
        tex_stylenameM.setValue(stylenameM);
        tex_marcaM.setValue(marca);
        tex_colorM.setValue(colorM);
        tex_materialM.setValue(materialM);
        tex_detalleM.setValue(detalleM);
        tex_imagenM.setValue(imagenM);

      

    }

    public Button getBut_aceptar() {
        return but_aceptarP;
    }

    public Button getBut_cancelar() {
        return but_cancelarP;
    }

    public void GuardarNuevaMarca() {
        String cadena = "php/MarcaDetalle.php?funcion=GuardarNuevaMarca";
        cadena =
                cadena + "&" + formPanel.getForm().getValues();
        final Conector conec = new Conector(cadena, false);
        Utils.setErrorPrincipal("Guardando el nuevo proveedor", "guardar");
        try {
            conec.getRequestBuilder().sendRequest(null, new RequestCallback() {

                public void onResponseReceived(Request request, Response response) {
                    String data = response.getText();
                    JSONValue jsonValue = JSONParser.parse(data);
                    JSONObject jsonObject;

                    if ((jsonObject = jsonValue.isObject()) != null) {
                        String errorR = Utils.getStringOfJSONObject(jsonObject, "error");
                        String mensajeR = Utils.getStringOfJSONObject(jsonObject, "mensaje");
                        if (errorR.equalsIgnoreCase("true")) {
                            Utils.setErrorPrincipal(mensajeR, "mensaje");
                            close();

                            padre.reload();
                        } else {
                            Utils.setErrorPrincipal(mensajeR, "error");
                        }

                    }

                }

                public void onError(Request request, Throwable exception) {
                    Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
                }
            });

        } catch (RequestException ex) {
            ex.getMessage();
            Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
        }

    }

    public void GuardarEditarMarca() {
        String cadena = "php/ModeloDetalle.php?funcion=GuardarEditarModelo";
        cadena =
                cadena + "&" + formPanel.getForm().getValues();
        final Conector conec = new Conector(cadena, false);
        Utils.setErrorPrincipal("Actualizando...", "guardar");
        try {
            conec.getRequestBuilder().sendRequest(null, new RequestCallback() {

                public void onResponseReceived(Request request, Response response) {
                    String data = response.getText();
                    JSONValue jsonValue = JSONParser.parse(data);
                    JSONObject jsonObject;

                    if ((jsonObject = jsonValue.isObject()) != null) {
                        String errorR = Utils.getStringOfJSONObject(jsonObject, "error");
                        String mensajeR = Utils.getStringOfJSONObject(jsonObject, "mensaje");
                        if (errorR.equalsIgnoreCase("true")) {
                            Utils.setErrorPrincipal(mensajeR, "mensaje");
                            close();

                            padre.reload();
                        } else {
                            Utils.setErrorPrincipal(mensajeR, "error");
                        }

                    }
                }

                public void onError(Request request, Throwable exception) {
                    Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
                }
            });

        } catch (RequestException ex) {
            ex.getMessage();
            Utils.setErrorPrincipal("Ocurrio un error al conectar con el servidor", "error");
        }
    }

    
}